# .env

# SECURITY WARNING: keep this secret in production!
# Generate a new one with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-insecure-local-secret-key

# Set to False in production
DEBUG=True

# Hosts for development. For production, use your actual domain(s).
# Example: ALLOWED_HOSTS=your-domain.com,www.your-domain.com
ALLOWED_HOSTS=127.0.0.1,localhost

# Database connection string
# Example for PostgreSQL: postgres://user:password@host:port/dbname
# Example for local SQLite: sqlite:///db.sqlite3
DATABASE_URL=postgres://user:pass@localhost:5432/dbnameSECRET_KEY=your-insecure-local-secret-key

# Set to False in production
DEBUG=True

# Hosts for development. For production, use your actual domain(s).
# Example: ALLOWED_HOSTS=your-domain.com,www.your-domain.com
ALLOWED_HOSTS=127.0.0.1,localhost

# --- Database ---
# Use a full database URL.
# Example for PostgreSQL: postgres://user:password@host:port/dbname
# Example for local SQLite: sqlite:///db.sqlite3
DATABASE_URL=sqlite:///db.sqlite3

# --- Celery ---
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# --- CORS ---
# For local development with a frontend on port 3000
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000